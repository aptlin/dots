#+STARTUP: showall
#+OPTIONS: html-postamble:nil
#+OPTIONS: num:nil
#+SETUPFILE: ./setup/theme-readtheorg-local.setup
* 
  :PROPERTIES:
  :VISIBILITY: folded
  :END:
  
#+BEGIN_EXPORT html
<html>
<head>
<title>Haku</title>
<style type="text/css">
body {
   text-align: center;
   font: Trebuchet MS;
}
input#search {
   width: 600px;
   height: 45px;
   padding: 10px;
   font-size: 16px;
}
div#main {
   cursor: pointer;
   margin-top: 20px;
}
span.intpart {
   font-size: 80px;
   color: #cb4b16;
}
span.fracpart {
   font-size: 80px;
   color: #2aa198;
}
</style>
<style>
.progress {
height: 60px;
margin: 20px;
}
.progress > svg {
height: 100%;
display: block;
}
</style>
<script type="text/javascript" src="styles/lib/js/progressbar.min.js"></script>
<script type="text/javascript">

function isLeapYear(year) {
    var d = new Date(year, 1, 28);
    d.setDate(d.getDate() + 1);
    return d.getMonth() == 1;
}
function getAge(date) {
    var d = new Date(date);
    var now = new Date();
    var years = now.getFullYear() - d.getFullYear();
    d.setFullYear(d.getFullYear() + years);
    if (d > now) {
        years--;
        d.setFullYear(d.getFullYear() - 1);
    }
    var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000);
    return years + days / (isLeapYear(now.getFullYear()) ? 366 : 365);
}
function update(t, id) {
   var dom = document.getElementById(id);
   var a = Math.abs(t);
   var ip = Math.floor(a); // int part
   var fp = a - ip; // frac part
   dom.innerHTML = '<span class="intpart">' + ip + '</span>'
	   + '<span class="fracpart">' + fp.toString().slice(1,10) + '</span>';
}

function setCookie(cname, cvalue, exdays) {
var d = new Date();
d.setTime(d.getTime() + (exdays*24*60*60*1000));
var expires = "expires="+d.toUTCString();
document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) {
var name = cname + "=";
var ca = document.cookie.split(';');
for(var i = 0; i < ca.length; i++) {
   var c = ca[i];
   while (c.charAt(0) == ' ') {
       c = c.substring(1);
   }
   if (c.indexOf(name) == 0) {
       return c.substring(name.length, c.length);
   }
}
return "";
}
</script>
</head>

<body>
<div id="main"></div>
<div id="searchdiv">
   <form action="http://www.duckduckgo.com" method="get">
   <input name="q" autocomplete="off" id="search" />
   </form>
</div>
<div class="progress" id="progress"></div>

<script type="text/javascript">


var target_date = getCookie("target") || "0000-01-01";
var current_age = getAge(target_date);
update(current_age, "main");
var circle = new ProgressBar.Circle('#progress', {
   color: '#FCB03C',
   easing: 'easeInOut',
   strokeWidth: 5
});
var inc_time = 0.00000001;
var ms_per_year = 365.242 * 24 * 3600 * 1000;



window.setInterval(function() {
   current_age += inc_time;
   update(current_age, "main");
   circle.set(1 - (23 - current_age) / 4);
}, inc_time * ms_per_year);



document.getElementById("main").onclick = function() {
   var ans = prompt("Enter a date in YYYY-MM-DD format");
   if (ans) {
	   setCookie("target", ans, 1000);
	   document.location.reload();
   }
}


</script>
</body>
</html>
#+END_EXPORT
* Map
** Agenda
*** Networks
**** Books
***** [[file:~/werke/agenda/gt/%5BMark_Newman%5D_Networks_An_Introduction(b-ok.org).pdf][Newman]]
***** [[file:~/werke/agenda/gt/(Graduate%20Texts%20in%20Mathematics)%20Bela%20Bollobas-Modern%20Graph%20Theory-Springer%20(2002).pdf][Bollobas]]
*** Optimisation
**** Books
***** [[file:~/werke/agenda/co/1405.4980.pdf][Bubeck]]
**** Cheeger constant
***** [[file:~/werke/agenda/papers/Donetti_2006_J._Stat._Mech._2006_P08007.pdf][Optimal Network Topologies]]
**** Concentration of measure
***** Isoperimetric inequality
***** Lipschitz constant
*** ML
**** Links
***** [[http://setosa.io/ev/principal-component-analysis/][PCA Explained Visually]]
**** Autoencoders and a method of independent components
**** Books:
***** [[file:~/werke/agenda/ml/Ian%20Goodfellow,%20Yoshua%20Bengio,%20Aaron%20Courville-Deep%20Learning-The%20MIT%20Press%20(2016).pdf][Goodfellow et al]]
**** Courses:
***** [[http://cs231n.github.io/][Convolutional Neural Networks for Image Recognition]]
***** [[http://vision.stanford.edu/teaching/cs231n/index.html][CS231n: Convolutional Neural Networks for Visual Recognition]]
***** [[http://cs224d.stanford.edu/index.html][CS224d: Deep Learning for Natural Language Processing, Richard Socher, Stanford]]
***** [[https://www.coursera.org/course/neuralnets][Neural Networks for Machine Learning, Geoffrey Hinton]] 
***** [[http://eclass.cc/courselists/111_computer_vision_and_navigation][CV Courses]]
***** [[http://eclass.cc/courselists/117_deep_learning][DL Courses]] 
***** “Deep Learning”, Ian Goodfellow, Yoshua Bengio and Aaron Courville (http://www.deeplearningbook.org/)
**** Articles
***** General
****** [[http://www.asimovinstitute.org/neural-network-zoo/][NN Zoo]]
***** Autoencoders
****** [[https://blog.keras.io/building-autoencoders-in-keras.html][in Keras]]
***** FNN
****** [[https://research.fb.com/learning-to-segment/][FB Post on Segmentation]]
***** t-SNE
****** [[https://www.oreilly.com/learning/an-illustrated-introduction-to-the-t-sne-algorithm][An Illustrated Intro To The t-Sne]] 
****** [[https://distill.pub/2016/misread-tsne/][How to Use t-SNE Effectively]]
***** RNN
****** [[http://karpathy.github.io/2015/05/21/rnn-effectiveness/][Unreasonable Effectiveness of RNN]]
****** LSTM
******* [[http://colah.github.io/posts/2015-08-Understanding-LSTMs/][Understanding LSTM Networks]]
**** Papers
***** Petro Domingos: [[file:~/werke/agenda/papers/cacm12.pdf][A Few Useful Things to Know about Machine Learning]]
*** Graph Optimization
**** Invariant properties of Laplacian and non-Laplacian matrices
*** Bioinf
**** Hamiltonian cycles and sequencing
**** Anton Korobeynikov, IonHammer
**** de Brujin graph
